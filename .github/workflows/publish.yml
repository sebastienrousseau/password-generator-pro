name: Build Password Generator Pro

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  publish-tauri:
    strategy:
      fail-fast: false

      matrix:
        platform: [macos-latest, ubuntu-latest]
        # platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 7

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install pNpM dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y libwebkit2gtk-4.0-dev \
              build-essential \
              curl \
              wget \
              libasound2-dev \
              libssl-dev \
              libgtk-3-dev \
              libayatana-appindicator3-dev \
              librsvg2-dev

      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry

          # Add date to the cache to keep it up to date
          key: ${{ matrix.platform }}-stable-cargo-registry-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}

          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.platform }}-stable-cargo-registry-${{ hashFiles('**/Cargo.toml') }}
            ${{ matrix.platform }}-stable-cargo-registry-

      - name: Cache cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git

          # Add date to the cache to keep it up to date
          key: ${{ matrix.platform }}-stable-cargo-index-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}

          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.platform }}-stable-cargo-index-${{ hashFiles('**/Cargo.toml') }}
            ${{ matrix.platform }}-stable-cargo-index-

      - name: Cache core cargo target
        uses: actions/cache@v2
        with:
          path: target

          # Add date to the cache to keep it up to date
          key: ${{ matrix.platform }}-stable-cargo-core-${{ hashFiles('core/**/Cargo.toml') }}-${{ env.CURRENT_DATE }}

          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.platform }}-stable-cargo-core-${{ hashFiles('core/**/Cargo.toml') }}
            ${{ matrix.platform }}-stable-cargo-core-

      - name: Install app dependencies and build it
        run: pnpm run build

      - name: Build
        run: cd src-tauri && cargo build --verbose

      - name: Run tests
        run: cd src-tauri && cargo test --verbose

      - name: Publish
        uses: tauri-apps/tauri-action@v0
        env:
          CARGO_TERM_COLOR: always
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_PUBLIC_KEY: ${{ secrets.TAURI_PUBLIC_KEY }}
        with:
          tagName: password-generator-pro-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "Password Generator v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false

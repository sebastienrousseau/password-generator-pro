name: "Build Password Generator Pro"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-binaries:
    name: "Build binaries"
    strategy:
      fail-fast: false
      matrix:
        build:
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            suffix: ubuntu-x86_64-${{ github.ref_name }}
            rustflags: ""
          - os: macos-12
            target: x86_64-apple-darwin
            suffix: macos-x86_64-${{ github.ref_name }}
            rustflags: ""
          - os: macos-12
            target: aarch64-apple-darwin
            suffix: macos-aarch64-${{ github.ref_name }}
            rustflags: ""
          - os: windows-2022
            target: x86_64-pc-windows-msvc
            suffix: windows-x86_64-${{ github.ref_name }}
            rustflags: ""
      # matrix:
      #   platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 7

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install pNpM dependencies
        run: pnpm install --frozen-lockfile

      - name: install Rust stable
        uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable

      # https://tauri.app/v1/guides/getting-started/prerequisites/
      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y libwebkit2gtk-4.0-dev \
              build-essential \
              curl \
              wget \
              libasound2-dev \
              libssl-dev \
              libgtk-3-dev \
              libayatana-appindicator3-dev \
              librsvg2-dev

      # - name: Install dependencies (windows only)
      #   if: matrix.platform == 'windows-latest'
      #   shell: pwsh
      #   run: |
      #     Invoke-WebRequest https://go.microsoft.com/fwlink/p/?LinkId=2124703 -OutFile installwebview.exe -UseBasicParsing
      #     cmd /C start /wait installwebview.exe /silent /install

      - name: Install app dependencies and build it
        run: pnpm run build

      - name: Build
        run: cd src-tauri && cargo build --verbose

      - name: Run tests
        run: cd src-tauri && cargo test --verbose

      - uses: actions/upload-artifact@master
        with:
          name: binaries
          path: ${{ GITHUB.WORKSPACE }}/src-tauri/target/release/bundle/*/password-generator-pro*

      # - name: Compress releases
      #   run: zip -r /home/runner/work/code-macros/binaries.zip $GITHUB_WORKSPACE/src-tauri/target/release/bundle/*/password-generator-pro*
      # - name: Delete old release
      #   uses: Archaholic/action-delete-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
      #   with:
      #     tag_name: rolling
      # - name: Update tag
      #   uses: EndBug/latest-tag@latest
      #   with:
      #     ref: rolling
      # - name: Release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     name: Rolling release
      #     prerelease: true
      #     tag_name: rolling
      #     body: "Latest commit: ${{ github.event.head_commit.message }}"
      #     # files: |
      #       # /home/runner/work/code-macros/binaries.zip
      #       # ${{ GITHUB.WORKSPACE }}/src-tauri/target/release/bundle/*/password-generator-pro*
      #     files: ${{ GITHUB.WORKSPACE }}/src-tauri/target/release/bundle/*/password-generator-pro*
      # - name: Upload Artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: binaries
      #     path: ${{ GITHUB.WORKSPACE }}/src-tauri/target/release/bundle/*/password-generator-pro*
